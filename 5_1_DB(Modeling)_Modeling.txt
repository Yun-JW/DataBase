5_1_DB(Modeling)_Modeling.txt

@@@ 데이터베이스 모델링 @@@

@ Modeling @
- 모형을 만드는 일
- 현대에는 뜻이 확장되어 실재하는 현상을 간단한 형태로 나타내어 이를 기술하거나 예측하기 위한 기법

@ DataBase Modeling @
- 현실 세계의 데이터를 체계적으로 분석하여 데이터베이스의 구조를 설계하는 과정
- 데이터의 논리적, 물리적 구조를 정의
- 효율적인 데이터 저정과 관리를 목표로 함

@ DataBase Modeling의 필요성 @
- 데이터 무결성 유지 : 데이터의 일관성과 정확성을 보장함
- 중복 최소화 : 데이터의 중복을 방지하여 저장 공간을 절약
- 효율적인 데이터 검색 : 최적화된 구조를 통해 빠른 검색과 성능 향상
- 유지보수 용이성 : 데이터 구조 변경 시 최소한의 영향을 미침

@ DataBase Modeling 과정 @
1. 요구사항 수집 및 분석
	현실 세꼐의 대상 및 사용자의 요구 등을 수집, 정리 및 분석
	사용자 식별
	데이터베이스 용도 식별
	사용자 요구 사항 수집 및 명세화
2. 개념적 데이터 모델링
	업무와 데이터 간의 관계를 구상
	핵심 Entity와 관계 도출
	개념 ERD 작성
3. 논리적 데이터 모델링
	구체화된 업무 중심의 데이터 모델 작성
	상세 속성등 정의, 기본키와 외래키 확정
	정구화를 적용하여 데이터의 중복을 최소화
	논리 ERD 작성
4. 물리적 데이터 모델링
	DBMS의 물리적 저장 구조를 정의
	역정규화
	인덱스, 파티셔닝, 스토리지 등을 고려하여 성능 최적화
5. 데이터베이스 구축

@@@ 요구 사항 수집 및 분석 @@@

@ 요구사항 수집 @
- 구축하고자 시스템을 위한 요구사항에 관련된 다양한 자료를 수집
	문서, 시스템, 워크샵 및 인터뷰, 설문조사, 프로토타이핑

@ 요구사항 분석 @
- 수집한 정보를 체계적으로 정리하고 분석하여 개발할 데이터베이스의 용도를 파악
- 데이터베이스가 저장하고 관리해야 할 데이터의 구조, 관계, 제약 조건 등을 명확히 정의하기 위해 요구사항을 분석하고 정리
- 비즈니스 규칙 도출 및 분석
- 데이터 흐름 및 업무 프로세스 분석
- 데이터베이스 설계의 기초를 마련하는 중요한 단계

@ 개념적 데이터 모데링 @
- 업무 프로세스, 요구사항 분석을 통하여 절리된 자룔르 다른 사람들이 이해하기 쉬운 형태로 표현
- 비즈니스 요구사항을 반영하여 개체, 속성, 관계를 정의
- 언어로 표현한 것은 한눈에 파악이 어렵고 관계 파악도 쉽지 않음
- 개체-관계 모델이 가장 많이 사용됨

@ 개체 @
- 시스템에서 지속적으로 저장하고 관리해야 하는 물리적, 개념적 대상
- 영속적이며 식별 가능한 데이터 요소를 갖음
- 일반적으로 분석한 정보를 토대로 명사형을 추출하는 방법으로 개체 식별 처리
- 현업에서 자주 사용하며 누구나 이해하기 쉬운 단어를 사용하되 중복되지 않도록 할 것

@ 개체의 유형 @
- 유/무형에 따라, 발생 시점에 따라
	유형 엔티티, 개념 엔티티, 사건 엔티티

@ 개체 식별 @
1. 명사로 된 단어 찾기
	개체와 속성의 후보
2. 비즈니스 분석 범위 내의 명사만 찾기
3. 찾은 명사 중 같은 의미로 사용되면서 다르게 표현되는 단어는 버릴 것
4. 여러 개릐 속성으로 구성될 수 있는 지 체크
5. 집합을 표현하는 지 체크

@ 개체 검증 @
- CRUD Matrix 상관관계 분석
- 추출한 엔티티와 프로세스 모델링에서 도출한 단위 프로세스를 이용하여 작업 진행
- 엔티티타입과 단위 프로세스를 이차원적인 테이블형태로 표현하여 작업

@ 속성 @
- 하나의 엔티티에 종속되는 명사적 단어
- 엔티티를 표현하는 특성, 상태

@ 속성의 유형 @
- 기본속성 : 업무 분석에서 도출된 본래의 속성
- 설계속성 : 설계 과정에서 발생하는 인위적으로 추가하거나 변형한 속성
- 파생속성 : 다른 속성에서 파생되어 계산된 속성 

@ 속성 추출 @
- 분석 과정에서 추출된 명사 중 여러 개의 구성 요소를 갖지 않는 명사들

@ 키 속성 추출 @
- 하나의 엔티티를 구성하는 속성 중 엔티티를 유일하게 식별하는 하나 이상의 속성 조합
- 모든 엔티티는 다른 엔티티와 구분이 가능한 단 하나의 식별자를 가져야 함
- Key의 유형
	1. 슈퍼키 : 레코드를 유일하게 식별할 수 있는 모든 속성들의 가능한 조합의 집합
	2. 후보키 : 슈퍼 키 중 최소성을 만족하는 키
			(식별하기 위한 최소한의 속성으로만 구성, 여러 개의 후보키 존재 가능)
	3. 기본 키 : 후보 키 중 가장 적합한 하나를 선택한 키
	4. 대체 키 : 후보 키 중 기본키로 선택되지 않은 키
	5. 인조 키 : 슈퍼 키가 없는 경우 인공적으로 만든 키

@ 관계 @
- 두 엔티티 간의 업무적 상관 관계

@ 관계 추출 @
- 요구사항 분석에서 동사적 단어 추출
- 두 엔티티 간의 중복되는 속성이 있는지 체크

@ 관계 검증 @
- 두 엔티티 간의 업무적 상관 관계를 Matrix로 표현하여 검증
- relationship matrix

@관계 차수 정의 @
- 관계의 유형
	1 : 1 관계
	1 : N 관계
	N : M 관계
@ 개념 ERD 작성 @
- 피터 첸 표기법 (자료 참조)

@@@ 논리적 데이터 모델링 @@@
- 개념적 데이터 모델링의 결과인 Er모델을 구체화된 업무 중심의 관계형 데이터 모델로 만듬
- 개념 모델을 구체화하여 데이터의 논리적 구조를 정의
	엔티티 : 릴레이션
	속성 : 속성
	후보키 : 기본키, 대체키
	관계 : 외래키(1 : 1, 1 : N), 릴레이션(N : M)
- 정규화
- 산출물 (논리 ERD : 릴레이션 스키마)

@ 기본 키 정의 @
- 후보 키 중 가장 접합한 하나를 선택한 키
- 업무 활용도가 높고 길이가 너무 길지 않은 것이 좋음

@ N : M 관계 해소 @
- N : M 관계는 데이터 중복이 발생할 수 밖에 없음
- 관계를 릴레이션으로 도출해서 1:N의 관계로 풀어냄
- 관계 릴레이션의 기본 키는 두 릴레이션의 기본키를 조합해 복합 키 헝태로 구성 또는 인공키 생성
- 관계 릴레이션에 관계 관련된 추가 속성도 정의 가능
- 두 릴레이션의 기본키가 관계 릴레이션의 외리키로 표현됨

@ 외래 키 정의 @
- 관계를 외래키로 표현
- 관계 차수에 따른 부모, 자식 릴레이션 확인 후 자식 릴레이션 쪽에 외래키 추가

@ 정규화 @
- 데이터베이스에서 중복을 최소화하고 데이터 무결성 유지를 위해 새로운 엔티티를 도출하는 과정
- 속성 간에 존재하는 함수적 종속성을 기반으로 유연한 구조를 정제하는 과정
- 제 1정규화 ~ 제 5 정규화에 이르는 단계가 있지만 보통 제 3정규화까지면 충분한 경우가 대부분
- 장점 
	1. 데이터 중복 최소화로 인한 저장 공간 절약 및 성능 개선
	2. 데이터 무결성 유지
	3. 데이터 삽입 / 수정 /삭제 이상 방지 가능
- 단점
	1. 물리적 접근이 복잡해짐 >>> 많은 조인 필요
	2. 길이가 짧은 데이터 생김
- 정규화 순서
1. 비졍규 릴레이션
2. 제 1 정규형 릴레이션
3. 제 2 정규횽 릴레이션
4. 제 3 정규형 릴레이션

@ 제 1 정규화 @
- 모든 속성이 원자값을 가져야 함
	컬럼에 다중 값을 저장하면 안됨
- 다치 속성을 갖는 릴레이션이 대상
- 과정
	1. 반복되는 속성을 새로운 릴레이션으로 분리
	2. 새로운 릴레이션의 기본키를 정의	
	3. 두 릴레이션 간에 관계를 부여 (외래키 정의)

@ 제 2 정규화 @
- 1NF를 만족해야 함
- 부분적 함수 종속을 제거함
- 기본 키가 복합키 형태이며 기본키의 일부에만 종속성을 갖는 속성을 지닌 릴레이션이 대상
- 과정
	1. 기본 키의 일부 속성과 기본 키 전체 속성이 아닌 이 속성에만 종속성을 갖는 속성을 새로운 릴레이션으로 분리
	2. 새로운 릴레이션의 기본키 정의
	3. 두 릴레이션 간에 관계를 부여 (외래키 정의)

@ 제 3 정규화 @
- 2NF를 만족해야 함
- 이행적 함수 종속을 제거함
- 기본키가 아닌 속성이 다른 속성의 결정자 역할을 하는 릴레이션이 대상
- 과정
	1. 기본 키가 아닌 다른 속성에 의해 종속성을 갖는 속성과 그결정자 속성을 새로운 릴레이션으로 분리
	2. 새로운 릴레이션의 기본키 정의
	3. 두 릴레이션 가에 관계를 부여(외래키 정의)

# 이행적 함수 종속
	A>>>B, B>>>C 일 때, A>>>C를 만족하면 이행적 함수 종속이라 함

@@@ 물리적 데이터 모델링 @@@
- 논리 모델링 결과를 실제 데이터베이스 환경에서 구현 가능한 형태로 변환하는 과정
	관계형 데이터 모델    |   DBMS 
	------------------------------------
	릴레이션		      |    테이블
	속성                        |    컬럼
	기본키,대체키, 외래키 |    제약조건
	
-DBMS의 특성과 성능을 고려
	데이터 타입 및 크기, 인덱스, 파티셔닝, 저장 구조 등을 결정
- 성능, 무결성, 보안 등을 고려하여 최적의 데이터베이스 구조를 설계
- 역정규화
	정규화된 데이터를 성능 향상을 위해 일부 중복을 허용하거나 다시 합치는 과정
- 산출물 : 물리 ERD

# ERD : Entity-Relationship Diagram

@ 역 정규화 @
- 정규화된 데이터를 성능 향상을 위해 일부 중복을 혀용하거나 다시 합치는 과정
- 테이블을 병합 하거나, 조회 속도를 높이기 위해 중복 데이터를 허용하는 작업이 포함 됨
- 쿼리 성능 최적화, 조인 비용 절감이 목적
- 데이터 조회 성능을 개선하지만, 데이터 일관성 관리가 어려워질 수 있음
- 결과적으로 테이블 개수가 줄어드는 경향이 있음
- 컬럼 역정규화
	잦은 조인이 유발되는 컬럼 추가
	조인 패스가 깊은 컬럼 추가
	파생 컬럼 추가
- 테이블 역정규화
	집계 테이블 추가
	잦은 조인이 유발되는 테이블과 통합







