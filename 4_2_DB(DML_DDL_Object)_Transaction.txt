4_2_DB(DML_DDL_Object)_Transaction.txt

@@@트랜잭션@@@

@트랜잭션
#transaction : 거래 , 매매, 처리(과정)

- 원자성을 가지는 하나의 논리적인 작업단위
- 분할해서 실행할 수 없는 한번에 처리해야하는 작업들의 모음
- 여러 개의 SQL문을 하나의 작업 단위로 묶어 처리
- ALL or Noting
- 모든 작업이 성공적으로 완료되면 커밋(COMMIT), 하나라도 실패하면 롤백(ROLLBACK) 수행
- 데이터의 무결성을 보장하는 핵심 개념

@트렌잭션의 특징(ACID)
1. 원자성(Atomicity) : 트랜잭션 내의 모든  연산이 성공하거나, 하나라도 실패하면 전체가 최소됨
2. 일관성(Consistency) : 트랜잭션이 실행되기 전과 후의 데이터베이스 상태가 일관성을 유지해야 함
				 데이터의 무결성 및 비즈니스 규칙이 항상 유지되는 상태를 의미
3. 고립성(Isolation) : 하나의 트랜잭션이 완료될 때까지 다른 트랜잭션이 접근하지 못함
			     하나의 특정 트랜잭션이 완료될때까지, 다른 트랜잭션이 특정 트랜잭션의 결과를 참조할 수 없음
4. 지속성(Durability) : 트랜잭션이 성공적으로 완료되면 그 결과가 영구적으로 반영됨

#잠금 : 동시성을 제어하기 위한 기능
#격리 수전 : 하나 또는 여러 트랜잭션 간의 작업 내용을 어떻게 공유하고 차단할 것인지를 결정하는 레벨

@격리 수준
1. READ UNCOMMITTED : 커밋되지 않은 데이터를 읽을 수 있음(Dirty Read 발생 가능)
2. READ COMMITTED : 커밋된 데이터만 읽을 수 있음(Non-Repeatable Read 발생 가능)
3. REPEATABLE READ : 트랜잭션 내에서 같은 데이터를 조회하면 항상 같은 데이터 조회 보장(Phantom Read 발생 가능)
4. SERIALIZABLE : 가장 엄격한 수준으로 동시 실행을 막음(성능 저하 발생 가능)

#Mysql 격리 수준 확인 > SELECT @@ TRANSACTION_ISOLATION
#Mysql 격리 수준 명시적 변경 > SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED

@트랜잭션 성능 최적화
- 트랜잭션 범위를 최소화하여 잠금 유지 시간을 줄임
- 적절한 격리 수준 선택하여 동시성 개선
- 인덱스를 활용하여 성능 향상

@TCL(Transaction Control Language)
1. START TRANSACTION(BEGIN TRANSACTION) : 명시적인 트랜잭션 시작
								    현 트랜잭션 처리를 위한 암묵적 자동 커밋 해제(session에 적용되는 것이 아님)
2. COMMIT : 트랜잭션을 성공적으로 완료하고 변경 사항을 저장
3. ROLLBACK [ TO SAVEPOINT명] : 트랜잭션을 취소하고 변경사항을 되돌림
4. SAVEPOINT savepoint명 : 트랜잭션 내에서 특정 지점을 저장하여 부분 롤백을 가능하게 함

@잠금 읽기
- 다른 트랜잭션의 읽기는 허용, 쓰기는 금지
	START TRANSACTION;
	SELECT ~ FOR SHARE;
	...

- 다른 트랜잭션의 읽기 쓰기 금지
	START TRANSACTION;
	SELECT ~ FOR UPDATE;
	...



