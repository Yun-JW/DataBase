4_1_DB(DML_DDL_Ovject)_DML

@@@DML@@@

@DML
- Data Manipulation Language
- 테이블의 데이터를 조작하기 위한 명령어
INSERT(테이블에 1개 또는 여러 개의 새로운 데이터 삽입)
UPDATE(테이블에 존재하는 1개 또는 여러 개의 기존 데이터 수정)
DELETE(테이블에 존재하는 1개 또는 여러 개의 데이터 삭제)

@INSERT
- 새로운 행을 삽입
- 레코드 수 증가
- 단일 행 삽입 형식
	INSERT INTO 테이블명 [{컬럼명 [,컬럼명...])]
	VALUES ({값 | sub Query} [, 값...]);
	- INTO절 컬럼 리스트에 명시한 컬럼에 맞게 VALUES 절에서 대응되는 컬럼 값을 입력
	- INTO절 컬럼 리스트를 명시하지 않으면 테이블 생성 시 정의한 모든 컬럼을 생성 순서와 동일한 순서로 입력

- 다중 행 삽입 형식
	INSERT INTO 테이블명[(컬럼명 [, 컬럼명...])]
	VALUES (값 [, 값...]),
		    (값 [, 값...]),
		    ...
		    (값 [, 값...]);
		
	INSERT INTO 테이블명[(컬럼명 [, 컬럼명...])]
	Sub Query

	- INSERT 명령문의 VALUES절 대신 서브쿼리에서 검색된 결과 집합을 한꺼번에 입력
	- 서브 쿼리의 결과 집합은 INSERT 명령문에 지정된 칼럼 개수와 데이터 타입이 일치해야 함

#생략 가능한 컬럼
	1. NULL이 허용된 컬럼
	2. DEFAULT가 설정된 컬럼
	3. AUTO_INCREMENT가 설정된 컬럼

- NULL 입력
	INTO절에서 해당 컬럼 이름 생략
	VALUES절에서 NULL 키워드나 ''사용

-기본값 처리
	INTO절에서 해당 컬럼 이름 생략
	VALUES절에서 DEFAULT 키워드 사용

@UPDATE
-기존 데이터를 수정
-레코드 수 변화 없음
-형식
	UPDATE 테이블명
	SET 컬럼명 = { 값 | Sub Query} [, 컬럼명 = 값, ...]
	[WHERE 조건];
	
	- 수정 값은 직접 명시하거나 서브 쿼리의 결과를 이용할 수 있음
	- 서브 쿼리의 결과를 이용할 경우 단일 행 서브 쿼리만 가능
	- WHERE절 생략 시 전체 레코드가 수정 되니 유의할 것

@UPDATE와 JOIN
- 수정에 쓰일 데이터를 조인된 결과에서 가져와서 처리
- 형식
	UPDATE 테이블명 a
	JOIN 	    테이블명 b	ON (조인조건)
	SET 	    a.컬러명 = b.컬럼명 [, a.컬럼명 = b.컬러명, ...]
	[WHERE 조건]; 

@INSERT OR UPDATE
- 기존 데이터가 있으면 수정 없으면 삽입으로 처리
- 형식
	INSERT INTO 테이블명 [{컬럼명 [, 컬럼명...])]
	VALUES (값, [, 값...])
	ON DUPLICATE KEY UPDATE 컬럼명 = 값 [. 컬럼명=값, ...];

@DELETE
- 기존 데이터 삭제
- 레코드 수 감소
- 형식 
	DELETE FROM 테이블명
	[WHERE 조건];
	- WHERE절 생략 시 전체 레코드가 삭제되니 유의할 것



